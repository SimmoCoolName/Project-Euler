# Project Euler: Problem 12
import time
import math
start = time.time()

def num_of_divisors(n):
	divisors = 1
	count = 0
	p = 3
	if n % 2 == 0:
		n = n/2
	while n % 2 ==0:
		count += 1
		n = n/2
	divisors = divisors * (count + 1)
	while n != 1:
		count = 0
		while n % p == 0:
			count += 1
			n = n/p
		divisors = divisors * (count + 1)
		p += 2
	return divisors

def triangle(limit):
	n = 1 
	x = num_of_divisors(n)
	y = num_of_divisors(n+1)
	while x * y < limit:
		n += 1
		x = y
		y = num_of_divisors(n+1)
	return n

q = triangle(500)
answer = (q*(q+1)) / 2
time_taken = time.time() - start

print("Answer: ",answer,"in ",time_taken)
